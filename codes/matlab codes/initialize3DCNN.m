function net = initialize3DCNN()
f=1/100 ;
net.layers = {} ;
net.layers{end+1} = struct('type', 'conv3D', ...
                           'filters', f*randn(5,5,1,1,20, 'single'), ...
                           'biases', zeros(1, 20, 'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'pool3D', ...
                            'method', 'max', ...
                            'pool', 2, ...
                            'stride', 2, ...
                            'pad', 0) ;
net.layers{end+1} = struct('type', 'relu') ;

                        net.layers{end+1} = struct('type', 'conv3D', ...
                           'filters', f*randn(5,5,1,20,32, 'single'),...
                           'biases', zeros(1,32,'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
 net.layers{end+1} = struct('type', 'pool3D', ...
                            'method', 'max', ...
                            'pool', 1, ...
                            'stride', 1, ...
                            'pad', 0) ;
net.layers{end+1} = struct('type', 'relu') ;

net.layers{end+1} = struct('type', 'conv3D', ...
                           'filters', f*randn(5,5,1,32,512, 'single'),...
                           'biases', zeros(1,512,'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'relu') ;
net.layers{end+1} = struct('type', 'conv3D', ...
                           'filters', f*randn(1,1,1,512,3, 'single'),...
                           'biases', zeros(1,3,'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'softmaxloss3D') ;
% f=1/100 ;
% net.layers = {} ;
% net.layers{end+1} = struct('type', 'conv3D', ...
%                            'filters', f*randn(7,7,1,1,1000, 'single'), ...
%                            'biases', zeros(1, 1000, 'single'), ...
%                            'stride', 1, ...
%                            'pad', 0) ;
% % net.layers{end+1} = struct('type', 'pool3D', ...
% %                            'method', 'max', ...
% %                            'pool', [2 2 2], ...
% %                            'stride', [1 1 1], ...
% %                            'pad', [0,0,  0,0, 0,0]) ;
%                        net.layers{end+1} = struct('type', 'relu') ;
% %                        net.layers{end+1} = struct('type', 'conv3D', ...
% %                            'filters', f*randn(5,5,1,10,50, 'single'), ...
% %                            'biases', zeros(1, 50, 'single'), ...
% %                            'stride', 1, ...
% %                            'pad', 0) ;
%                         net.layers{end+1} = struct('type', 'conv3D', ...
%                            'filters', f*randn(9,9,3,1000,3, 'single'), ...
%                            'biases', zeros(1, 3, 'single'), ...
%                            'stride', 1, ...
%                            'pad', 0) ;
% %                                               net.layers{end+1} = struct('type', 'relu') ;
% 
% %                         net.layers{end+1} = struct('type', 'conv3D', ...
% %                            'filters', f*randn(5,5,3,500,3, 'single'), ...
% %                            'biases', zeros(1, 3, 'single'), ...
% %                            'stride', 1, ...
% %                            'pad', 0) ;
%  net.layers{end+1} = struct('type', 'softmaxloss3D') ;
% 
% % net.layers{end+1} = struct('type', 'conv3D', ...
% %                            'filters', f*randn(5,5,20,50, 'single'),...
% %                            'biases', zeros(1,50,'single'), ...
% %                            'stride', 1, ...
% %                            'pad', 0) ;
% % net.layers{end+1} = struct('type', 'pool3D', ...
% %                            'method', 'max', ...
% %                            'pool', [2 2 2], ...
% %                            'stride', [1 1 1], ...
% %                            'pad', 0) ;
% % net.layers{end+1} = struct('type', 'conv', ...
% %                            'filters', f*randn(4,4,50,500, 'single'),...
% %                            'biases', zeros(1,500,'single'), ...
% %                            'stride', 1, ...
% %                            'pad', 0) ;
% % net.layers{end+1} = struct('type', 'relu') ;
% % net.layers{end+1} = struct('type', 'conv', ...
% %                            'filters', f*randn(2,2,500,26, 'single'),...
% %                            'biases', zeros(1,26,'single'), ...
% %                            'stride', 1, ...
% %                            'pad', 0) ;
% % net.layers{end+1} = struct('type', 'softmaxloss') ;