function net = initialize2DCNN()

f=1/100 ;
net.layers = {} ;
net.layers{end+1} = struct('type', 'conv', ...
                           'filters', f*randn(5,5,1,20, 'single'), ...
                           'biases', zeros(1, 20, 'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'pool', ...
                            'method', 'max', ...
                            'pool', [2 2], ...
                            'stride', 2, ...
                            'pad', 0) ;
net.layers{end+1} = struct('type', 'relu') ;

                        net.layers{end+1} = struct('type', 'conv', ...
                           'filters', f*randn(5,5,20,32, 'single'),...
                           'biases', zeros(1,32,'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
 net.layers{end+1} = struct('type', 'pool', ...
                            'method', 'max', ...
                            'pool', [2 2], ...
                            'stride', 2, ...
                            'pad', 0) ;
net.layers{end+1} = struct('type', 'relu') ;

net.layers{end+1} = struct('type', 'conv', ...
                           'filters', f*randn(5,5,32,512, 'single'),...
                           'biases', zeros(1,512,'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'relu') ;
net.layers{end+1} = struct('type', 'conv', ...
                           'filters', f*randn(1,1,512,3, 'single'),...
                           'biases', zeros(1,3,'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'softmaxloss') ;